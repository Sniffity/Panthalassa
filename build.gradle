buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        maven { url='https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.log4j' }
        classpath 'org.apache.logging.log4j:log4j-api:2.11.2'
        classpath 'org.apache.logging.log4j:log4j-core:2.11.2'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"

    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = "${mod_version}-${minecraft_version}"
group = 'com.github.sniffity.panthalassa'
archivesBaseName = "${mod_id}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: "official", version: "${minecraft_version}"
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'
            mods {
                panthalassa {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            mods {
                panthalassa {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            args '--mod', 'panthalassa', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                panthalassa  {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url = 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-67")
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.18.2-67:api")
    implementation fg.deobf('software.bernie.geckolib:geckolib-1.18-forge:3.0.15')
    runtimeOnly fg.deobf("curse.maven:cyanide-541676:3545771")
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def intoTargets = ["$rootDir/out/production/resources/", "$rootDir/out/production/${project.name}.main/", "$rootDir/bin/main/"]
def replaceProperties = [mod_id: mod_id, mod_name: mod_name, mod_version: mod_version,
                         mod_authors: mod_authors, mod_description: mod_description,
                         minecraft_version_range: minecraft_version_range, forge_version_range: forge_version_range,
                         loader_version_range: loader_version_range]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }

    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
}
apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'